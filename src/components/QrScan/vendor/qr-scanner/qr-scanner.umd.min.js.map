{"version":3,"file":"qr-scanner.umd.min.js","sources":["src/qr-scanner.js"],"sourcesContent":["export default class QrScanner {\n  /* async */\n  static hasCamera() {\n    if (!navigator.mediaDevices) return Promise.resolve(false);\n    // note that enumerateDevices can always be called and does not prompt the user for permission. However, device\n    // labels are only readable if served via https and an active media stream exists or permanent permission is\n    // given. That doesn't matter for us though as we don't require labels.\n    return navigator.mediaDevices\n      .enumerateDevices()\n      .then((devices) => devices.some((device) => device.kind === \"videoinput\"))\n      .catch(() => false);\n  }\n\n  constructor(\n    video,\n    onDecode,\n    canvasSizeOrOnDecodeError = this._onDecodeError,\n    canvasSizeOrCalculateScanRegion = this._calculateScanRegion,\n    preferredFacingMode = \"environment\"\n  ) {\n    this.$video = video;\n    this.$canvas = document.createElement(\"canvas\");\n    this._onDecode = onDecode;\n    this._legacyCanvasSize = QrScanner.DEFAULT_CANVAS_SIZE;\n    this._preferredFacingMode = preferredFacingMode;\n    this._active = false;\n    this._paused = false;\n    this._flashOn = false;\n\n    if (typeof canvasSizeOrOnDecodeError === \"number\") {\n      // legacy function signature where the third argument is the canvas size\n      this._legacyCanvasSize = canvasSizeOrOnDecodeError;\n      console.warn(\n        \"You're using a deprecated version of the QrScanner constructor which will be removed in \" +\n          \"the future\"\n      );\n    } else {\n      this._onDecodeError = canvasSizeOrOnDecodeError;\n    }\n\n    if (typeof canvasSizeOrCalculateScanRegion === \"number\") {\n      // legacy function signature where the fourth argument is the canvas size\n      this._legacyCanvasSize = canvasSizeOrCalculateScanRegion;\n      console.warn(\n        \"You're using a deprecated version of the QrScanner constructor which will be removed in \" +\n          \"the future\"\n      );\n    } else {\n      this._calculateScanRegion = canvasSizeOrCalculateScanRegion;\n    }\n\n    this._scanRegion = this._calculateScanRegion(video);\n\n    this._onPlay = this._onPlay.bind(this);\n    this._onLoadedMetaData = this._onLoadedMetaData.bind(this);\n    this._onVisibilityChange = this._onVisibilityChange.bind(this);\n\n    // Allow inline playback on iPhone instead of requiring full screen playback,\n    // see https://webkit.org/blog/6784/new-video-policies-for-ios/\n    this.$video.playsInline = true;\n    // Allow play() on iPhone without requiring a user gesture. Should not really be needed as camera stream\n    // includes no audio, but just to be safe.\n    this.$video.muted = true;\n    this.$video.disablePictureInPicture = true;\n    this.$video.addEventListener(\"play\", this._onPlay);\n    this.$video.addEventListener(\"loadedmetadata\", this._onLoadedMetaData);\n    document.addEventListener(\"visibilitychange\", this._onVisibilityChange);\n\n    this._qrEnginePromise = QrScanner.createQrEngine();\n  }\n\n  /* async */\n  hasFlash() {\n    if (!(\"ImageCapture\" in window)) {\n      return Promise.resolve(false);\n    }\n\n    const track = this.$video.srcObject\n      ? this.$video.srcObject.getVideoTracks()[0]\n      : null;\n    if (!track) {\n      return Promise.reject(\"Camera not started or not available\");\n    }\n\n    const imageCapture = new ImageCapture(track);\n    return imageCapture\n      .getPhotoCapabilities()\n      .then((result) => result.fillLightMode.includes(\"flash\"))\n      .catch((error) => {\n        console.warn(error);\n        return false;\n      });\n  }\n\n  isFlashOn() {\n    return this._flashOn;\n  }\n\n  /* async */\n  toggleFlash() {\n    return this._setFlash(!this._flashOn);\n  }\n\n  /* async */\n  turnFlashOff() {\n    return this._setFlash(false);\n  }\n\n  /* async */\n  turnFlashOn() {\n    return this._setFlash(true);\n  }\n\n  destroy() {\n    this.$video.removeEventListener(\"loadedmetadata\", this._onLoadedMetaData);\n    this.$video.removeEventListener(\"play\", this._onPlay);\n    document.removeEventListener(\"visibilitychange\", this._onVisibilityChange);\n\n    this.stop();\n    QrScanner._postWorkerMessage(this._qrEnginePromise, \"close\");\n  }\n\n  /* async */\n  start() {\n    if (this._active && !this._paused) {\n      return Promise.resolve();\n    }\n    if (window.location.protocol !== \"https:\") {\n      // warn but try starting the camera anyways\n      console.warn(\n        \"The camera stream is only accessible if the page is transferred via https.\"\n      );\n    }\n    this._active = true;\n    this._paused = false;\n    if (document.hidden) {\n      // camera will be started as soon as tab is in foreground\n      return Promise.resolve();\n    }\n    clearTimeout(this._offTimeout);\n    this._offTimeout = null;\n    if (this.$video.srcObject) {\n      // camera stream already/still set\n      this.$video.play();\n      return Promise.resolve();\n    }\n\n    let facingMode = this._preferredFacingMode;\n    return this._getCameraStream(facingMode, true)\n      .catch(() => {\n        // We (probably) don't have a camera of the requested facing mode\n        facingMode = facingMode === \"environment\" ? \"user\" : \"environment\";\n        return this._getCameraStream(); // throws if camera is not accessible (e.g. due to not https)\n      })\n      .then((stream) => {\n        // Try to determine the facing mode from the stream, otherwise use our guess. Note that the guess is not\n        // always accurate as Safari returns cameras of different facing mode, even for exact constraints.\n        facingMode = this._getFacingMode(stream) || facingMode;\n        this.$video.srcObject = stream;\n        this.$video.play();\n        this._setVideoMirror(facingMode);\n      })\n      .catch((e) => {\n        this._active = false;\n        throw e;\n      });\n  }\n\n  stop() {\n    this.pause();\n    this._active = false;\n  }\n\n  pause() {\n    this._paused = true;\n    if (!this._active) {\n      return;\n    }\n    this.$video.pause();\n    if (this._offTimeout) {\n      return;\n    }\n    this._offTimeout = setTimeout(() => {\n      const tracks = this.$video.srcObject\n        ? this.$video.srcObject.getTracks()\n        : [];\n      for (const track of tracks) {\n        track.stop(); //  note that this will also automatically turn the flashlight off\n      }\n      this.$video.srcObject = null;\n      this._offTimeout = null;\n    }, 300);\n  }\n\n  /* async */\n  static scanImage(\n    imageOrFileOrUrl,\n    scanRegion = null,\n    qrEngine = null,\n    canvas = null,\n    fixedCanvasSize = false,\n    alsoTryWithoutScanRegion = false\n  ) {\n    const gotExternalWorker = qrEngine instanceof Worker;\n\n    let promise = Promise.all([\n      qrEngine || QrScanner.createQrEngine(),\n      QrScanner._loadImage(imageOrFileOrUrl),\n    ]).then(([engine, image]) => {\n      qrEngine = engine;\n      let canvasContext;\n      [canvas, canvasContext] = this._drawToCanvas(\n        image,\n        scanRegion,\n        canvas,\n        fixedCanvasSize\n      );\n\n      if (qrEngine instanceof Worker) {\n        if (!gotExternalWorker) {\n          // Enable scanning of inverted color qr codes. Not using _postWorkerMessage as it's async\n          qrEngine.postMessage({ type: \"inversionMode\", data: \"both\" });\n        }\n        return new Promise((resolve, reject) => {\n          let timeout;\n          let onMessage;\n          let onError;\n          onMessage = (event) => {\n            if (event.data.type !== \"qrResult\") {\n              return;\n            }\n            qrEngine.removeEventListener(\"message\", onMessage);\n            qrEngine.removeEventListener(\"error\", onError);\n            clearTimeout(timeout);\n            if (event.data.data !== null) {\n              resolve(event.data.data);\n            } else {\n              reject(QrScanner.NO_QR_CODE_FOUND);\n            }\n          };\n          onError = (e) => {\n            qrEngine.removeEventListener(\"message\", onMessage);\n            qrEngine.removeEventListener(\"error\", onError);\n            clearTimeout(timeout);\n            const errorMessage = !e ? \"Unknown Error\" : e.message || e;\n            reject(`Scanner error: ${errorMessage}`);\n          };\n          qrEngine.addEventListener(\"message\", onMessage);\n          qrEngine.addEventListener(\"error\", onError);\n          timeout = setTimeout(() => onError(\"timeout\"), 10000);\n          const imageData = canvasContext.getImageData(\n            0,\n            0,\n            canvas.width,\n            canvas.height\n          );\n          qrEngine.postMessage(\n            {\n              type: \"decode\",\n              data: imageData,\n            },\n            [imageData.data.buffer]\n          );\n        });\n      }\n      return new Promise((resolve, reject) => {\n        const timeout = setTimeout(\n          () => reject(\"Scanner error: timeout\"),\n          10000\n        );\n        qrEngine\n          .detect(canvas)\n          .then((scanResults) => {\n            if (!scanResults.length) {\n              reject(QrScanner.NO_QR_CODE_FOUND);\n            } else {\n              resolve(scanResults[0].rawValue);\n            }\n          })\n          .catch((e) => reject(`Scanner error: ${e.message || e}`))\n          .finally(() => clearTimeout(timeout));\n      });\n    });\n\n    if (scanRegion && alsoTryWithoutScanRegion) {\n      promise = promise.catch(() =>\n        QrScanner.scanImage(\n          imageOrFileOrUrl,\n          null,\n          qrEngine,\n          canvas,\n          fixedCanvasSize\n        )\n      );\n    }\n\n    promise = promise.finally(() => {\n      if (gotExternalWorker) return;\n      QrScanner._postWorkerMessage(qrEngine, \"close\");\n    });\n\n    return promise;\n  }\n\n  setGrayscaleWeights(red, green, blue, useIntegerApproximation = true) {\n    // Note that for the native BarcodeDecoder, this is a no-op. However, the native implementations work also\n    // well with colored qr codes.\n    QrScanner._postWorkerMessage(this._qrEnginePromise, \"grayscaleWeights\", {\n      red,\n      green,\n      blue,\n      useIntegerApproximation,\n    });\n  }\n\n  setInversionMode(inversionMode) {\n    // Note that for the native BarcodeDecoder, this is a no-op. However, the native implementations scan normal\n    // and inverted qr codes by default\n    QrScanner._postWorkerMessage(\n      this._qrEnginePromise,\n      \"inversionMode\",\n      inversionMode\n    );\n  }\n\n  /* async */\n  static createQrEngine(workerPath = QrScanner.WORKER_PATH) {\n    console.log(\"WORKER PATH\", workerPath);\n    return (\n      \"BarcodeDetector\" in window\n        ? BarcodeDetector.getSupportedFormats()\n        : Promise.resolve([])\n    ).then((supportedFormats) =>\n      supportedFormats.indexOf(\"qr_code\") !== -1\n        ? new BarcodeDetector({ formats: [\"qr_code\"] })\n        : new Worker(workerPath)\n    );\n  }\n\n  _onPlay() {\n    this._scanRegion = this._calculateScanRegion(this.$video);\n    this._scanFrame();\n  }\n\n  _onLoadedMetaData() {\n    this._scanRegion = this._calculateScanRegion(this.$video);\n  }\n\n  _onVisibilityChange() {\n    if (document.hidden) {\n      this.pause();\n    } else if (this._active) {\n      this.start();\n    }\n  }\n\n  _calculateScanRegion(video) {\n    // Default scan region calculation. Note that this can be overwritten in the constructor.\n    const smallestDimension = Math.min(video.videoWidth, video.videoHeight);\n    const scanRegionSize = Math.round((2 / 3) * smallestDimension);\n    return {\n      x: (video.videoWidth - scanRegionSize) / 2,\n      y: (video.videoHeight - scanRegionSize) / 2,\n      width: scanRegionSize,\n      height: scanRegionSize,\n      downScaledWidth: this._legacyCanvasSize,\n      downScaledHeight: this._legacyCanvasSize,\n    };\n  }\n\n  _scanFrame() {\n    if (!this._active || this.$video.paused || this.$video.ended) return false;\n    // using requestAnimationFrame to avoid scanning if tab is in background\n    requestAnimationFrame(() => {\n      if (this.$video.readyState <= 1) {\n        // Skip scans until the video is ready as drawImage() only works correctly on a video with readyState\n        // > 1, see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage#Notes.\n        // This also avoids false positives for videos paused after a successful scan which remains visible on\n        // the canvas until the video is started again and ready.\n        this._scanFrame();\n        return;\n      }\n      this._qrEnginePromise\n        .then((qrEngine) =>\n          QrScanner.scanImage(\n            this.$video,\n            this._scanRegion,\n            qrEngine,\n            this.$canvas\n          )\n        )\n        .then(this._onDecode, (error) => {\n          if (!this._active) return;\n          const errorMessage = error.message || error;\n          if (errorMessage.indexOf(\"service unavailable\") !== -1) {\n            // When the native BarcodeDetector crashed, create a new one\n            this._qrEnginePromise = QrScanner.createQrEngine();\n          }\n          this._onDecodeError(error);\n        })\n        .then(() => this._scanFrame());\n    });\n  }\n\n  _onDecodeError(error) {\n    // default error handler; can be overwritten in the constructor\n    if (error === QrScanner.NO_QR_CODE_FOUND) return;\n    console.log(error);\n  }\n\n  _getCameraStream(facingMode, exact = false) {\n    const constraintsToTry = [\n      {\n        width: { min: 1024 },\n      },\n      {\n        width: { min: 768 },\n      },\n      {},\n    ];\n\n    if (facingMode) {\n      if (exact) {\n        facingMode = { exact: facingMode };\n      }\n      constraintsToTry.forEach(\n        (constraint) => (constraint.facingMode = facingMode)\n      );\n    }\n    return this._getMatchingCameraStream(constraintsToTry);\n  }\n\n  _getMatchingCameraStream(constraintsToTry) {\n    if (!navigator.mediaDevices || constraintsToTry.length === 0) {\n      return Promise.reject(\"Camera not found.\");\n    }\n    return navigator.mediaDevices\n      .getUserMedia({\n        video: constraintsToTry.shift(),\n      })\n      .catch(() => this._getMatchingCameraStream(constraintsToTry));\n  }\n\n  /* async */\n  _setFlash(on) {\n    return this.hasFlash()\n      .then((hasFlash) => {\n        if (!hasFlash) return Promise.reject(\"No flash available\");\n        // Note that the video track is guaranteed to exist at this point\n        return this.$video.srcObject.getVideoTracks()[0].applyConstraints({\n          advanced: [{ torch: on }],\n        });\n      })\n      .then(() => (this._flashOn = on));\n  }\n\n  _setVideoMirror(facingMode) {\n    // in user facing mode mirror the video to make it easier for the user to position the QR code\n    const scaleFactor = facingMode === \"user\" ? -1 : 1;\n    this.$video.style.transform = `scaleX(${scaleFactor})`;\n  }\n\n  _getFacingMode(videoStream) {\n    const videoTrack = videoStream.getVideoTracks()[0];\n    if (!videoTrack) return null; // unknown\n    // inspired by https://github.com/JodusNodus/react-qr-reader/blob/master/src/getDeviceId.js#L13\n    return /rear|back|environment/i.test(videoTrack.label)\n      ? \"environment\"\n      : /front|user|face/i.test(videoTrack.label)\n      ? \"user\"\n      : null; // unknown\n  }\n\n  static _drawToCanvas(\n    image,\n    scanRegion = null,\n    canvas = null,\n    fixedCanvasSize = false\n  ) {\n    canvas = canvas || document.createElement(\"canvas\");\n    const scanRegionX = scanRegion && scanRegion.x ? scanRegion.x : 0;\n    const scanRegionY = scanRegion && scanRegion.y ? scanRegion.y : 0;\n    const scanRegionWidth =\n      scanRegion && scanRegion.width\n        ? scanRegion.width\n        : image.width || image.videoWidth;\n    const scanRegionHeight =\n      scanRegion && scanRegion.height\n        ? scanRegion.height\n        : image.height || image.videoHeight;\n    if (!fixedCanvasSize) {\n      canvas.width =\n        scanRegion && scanRegion.downScaledWidth\n          ? scanRegion.downScaledWidth\n          : scanRegionWidth;\n      canvas.height =\n        scanRegion && scanRegion.downScaledHeight\n          ? scanRegion.downScaledHeight\n          : scanRegionHeight;\n    }\n    const context = canvas.getContext(\"2d\", { alpha: false });\n    context.imageSmoothingEnabled = false; // gives less blurry images\n    context.drawImage(\n      image,\n      scanRegionX,\n      scanRegionY,\n      scanRegionWidth,\n      scanRegionHeight,\n      0,\n      0,\n      canvas.width,\n      canvas.height\n    );\n    return [canvas, context];\n  }\n\n  /* async */\n  static _loadImage(imageOrFileOrBlobOrUrl) {\n    if (\n      imageOrFileOrBlobOrUrl instanceof HTMLCanvasElement ||\n      imageOrFileOrBlobOrUrl instanceof HTMLVideoElement ||\n      (window.ImageBitmap &&\n        imageOrFileOrBlobOrUrl instanceof window.ImageBitmap) ||\n      (window.OffscreenCanvas &&\n        imageOrFileOrBlobOrUrl instanceof window.OffscreenCanvas)\n    ) {\n      return Promise.resolve(imageOrFileOrBlobOrUrl);\n    }\n    if (imageOrFileOrBlobOrUrl instanceof Image) {\n      return QrScanner._awaitImageLoad(imageOrFileOrBlobOrUrl).then(\n        () => imageOrFileOrBlobOrUrl\n      );\n    }\n    if (\n      imageOrFileOrBlobOrUrl instanceof File ||\n      imageOrFileOrBlobOrUrl instanceof Blob ||\n      imageOrFileOrBlobOrUrl instanceof URL ||\n      typeof imageOrFileOrBlobOrUrl === \"string\"\n    ) {\n      const image = new Image();\n      if (\n        imageOrFileOrBlobOrUrl instanceof File ||\n        imageOrFileOrBlobOrUrl instanceof Blob\n      ) {\n        image.src = URL.createObjectURL(imageOrFileOrBlobOrUrl);\n      } else {\n        image.src = imageOrFileOrBlobOrUrl;\n      }\n      return QrScanner._awaitImageLoad(image).then(() => {\n        if (\n          imageOrFileOrBlobOrUrl instanceof File ||\n          imageOrFileOrBlobOrUrl instanceof Blob\n        ) {\n          URL.revokeObjectURL(image.src);\n        }\n        return image;\n      });\n    }\n    return Promise.reject(\"Unsupported image type.\");\n  }\n\n  /* async */\n  static _awaitImageLoad(image) {\n    return new Promise((resolve, reject) => {\n      if (image.complete && image.naturalWidth !== 0) {\n        // already loaded\n        resolve();\n      } else {\n        let onLoad;\n        let onError;\n        onLoad = () => {\n          image.removeEventListener(\"load\", onLoad);\n          image.removeEventListener(\"error\", onError);\n          resolve();\n        };\n        onError = () => {\n          image.removeEventListener(\"load\", onLoad);\n          image.removeEventListener(\"error\", onError);\n          reject(\"Image load error\");\n        };\n        image.addEventListener(\"load\", onLoad);\n        image.addEventListener(\"error\", onError);\n      }\n    });\n  }\n\n  /* async */\n  static _postWorkerMessage(qrEngineOrQrEnginePromise, type, data) {\n    return Promise.resolve(qrEngineOrQrEnginePromise).then((qrEngine) => {\n      if (!(qrEngine instanceof Worker)) return;\n      qrEngine.postMessage({ type, data });\n    });\n  }\n}\nQrScanner.DEFAULT_CANVAS_SIZE = 400;\nQrScanner.NO_QR_CODE_FOUND = \"No QR code found\";\nQrScanner.WORKER_PATH = \"qr-scanner-worker.min.js\";\n//\"/Users/smcdougall/vci/shc-web-verifier/public/qr-scanner-worker.min.js\";\n//\"shc-web-verifier/src/components/QrScan/vendor/qr-scanner/qr-scanner-worker.min.js\";\n"],"names":["QrScanner","navigator","mediaDevices","enumerateDevices","then","devices","some","device","kind","catch","Promise","resolve","video","onDecode","canvasSizeOrOnDecodeError","_onDecodeError","canvasSizeOrCalculateScanRegion","_calculateScanRegion","preferredFacingMode","$video","$canvas","document","createElement","_onDecode","_legacyCanvasSize","DEFAULT_CANVAS_SIZE","_preferredFacingMode","_flashOn","_paused","_active","console","warn","_scanRegion","_onPlay","bind","_onLoadedMetaData","_onVisibilityChange","playsInline","muted","disablePictureInPicture","addEventListener","_qrEnginePromise","createQrEngine","window","srcObject","getVideoTracks","track","getPhotoCapabilities","result","fillLightMode","includes","error","reject","_setFlash","removeEventListener","stop","_postWorkerMessage","location","protocol","hidden","clearTimeout","_offTimeout","play","facingMode","_getCameraStream","stream","_getFacingMode","_setVideoMirror","e","pause","setTimeout","getTracks","imageOrFileOrUrl","scanRegion","qrEngine","canvas","fixedCanvasSize","alsoTryWithoutScanRegion","promise","all","_loadImage","engine","image","canvasContext","_drawToCanvas","Worker","gotExternalWorker","postMessage","type","data","timeout","onMessage","onError","event","NO_QR_CODE_FOUND","width","height","imageData","buffer","detect","scanResults","length","rawValue","message","finally","scanImage","red","green","blue","useIntegerApproximation","inversionMode","workerPath","WORKER_PATH","log","BarcodeDetector","getSupportedFormats","supportedFormats","indexOf","formats","_scanFrame","start","videoHeight","x","videoWidth","scanRegionSize","y","downScaledWidth","downScaledHeight","paused","ended","requestAnimationFrame","readyState","exact","min","constraintsToTry","forEach","constraint","_getMatchingCameraStream","getUserMedia","shift","on","hasFlash","applyConstraints","advanced","torch","style","transform","videoStream","test","videoTrack","label","scanRegionWidth","scanRegionHeight","alpha","context","imageSmoothingEnabled","drawImage","scanRegionX","scanRegionY","imageOrFileOrBlobOrUrl","HTMLCanvasElement","HTMLVideoElement","ImageBitmap","OffscreenCanvas","Image","_awaitImageLoad","File","Blob","URL","src","createObjectURL","revokeObjectURL","complete","naturalWidth","onLoad","qrEngineOrQrEnginePromise"],"mappings":"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"}