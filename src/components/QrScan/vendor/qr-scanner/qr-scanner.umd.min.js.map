{"version":3,"file":"qr-scanner.umd.min.js","sources":["src/qr-scanner.js"],"sourcesContent":["export default class QrScanner {\n  /* async */\n  static hasCamera() {\n    return QrScanner.listCameras(false)\n      .then((cameras) => !!cameras.length)\n      .catch(() => false);\n  }\n\n  /* async */\n  static listCameras(requestLabels = false) {\n    if (!navigator.mediaDevices) return Promise.resolve([]);\n\n    // Note that enumerateDevices can always be called and does not prompt the user for permission.\n    // However, enumerateDevices only includes device labels if served via https and an active media stream exists\n    // or permission to access the camera was given. Therefore, ask for camera permission by opening a stream, if\n    // labels were requested.\n    let openedStream = null;\n    return (\n      requestLabels\n        ? navigator.mediaDevices\n            .getUserMedia({ audio: false, video: true })\n            .then((stream) => (openedStream = stream))\n            // Fail gracefully, especially if the device has no camera or on mobile when the camera is already in\n            // use and some browsers disallow a second stream.\n            .catch(() => {})\n        : Promise.resolve()\n    )\n      .then(() => navigator.mediaDevices.enumerateDevices())\n      .then((devices) =>\n        devices\n          .filter((device) => device.kind === \"videoinput\")\n          .map((device, i) => ({\n            id: device.deviceId,\n            label:\n              device.label || (i === 0 ? \"Default Camera\" : `Camera ${i + 1}`),\n          }))\n      )\n      .finally(() => {\n        // close the stream we just opened for getting camera access for listing the device labels\n        if (!openedStream) return;\n        for (const track of openedStream.getTracks()) {\n          track.stop();\n          openedStream.removeTrack(track);\n        }\n      });\n  }\n\n  constructor(\n    video,\n    onDecode,\n    canvasSizeOrOnDecodeError = this._onDecodeError,\n    canvasSizeOrCalculateScanRegion = this._calculateScanRegion,\n    preferredCamera = \"environment\"\n  ) {\n    this.$video = video;\n    this.$canvas = document.createElement(\"canvas\");\n    this._onDecode = onDecode;\n    this._legacyCanvasSize = QrScanner.DEFAULT_CANVAS_SIZE;\n    this._preferredCamera = preferredCamera;\n    this._active = false;\n    this._paused = false;\n    this._flashOn = false;\n\n    if (typeof canvasSizeOrOnDecodeError === \"number\") {\n      // legacy function signature where the third argument is the canvas size\n      this._legacyCanvasSize = canvasSizeOrOnDecodeError;\n      console.warn(\n        \"You're using a deprecated version of the QrScanner constructor which will be removed in \" +\n          \"the future\"\n      );\n    } else {\n      this._onDecodeError = canvasSizeOrOnDecodeError;\n    }\n\n    if (typeof canvasSizeOrCalculateScanRegion === \"number\") {\n      // legacy function signature where the fourth argument is the canvas size\n      this._legacyCanvasSize = canvasSizeOrCalculateScanRegion;\n      console.warn(\n        \"You're using a deprecated version of the QrScanner constructor which will be removed in \" +\n          \"the future\"\n      );\n    } else {\n      this._calculateScanRegion = canvasSizeOrCalculateScanRegion;\n    }\n\n    this._scanRegion = this._calculateScanRegion(video);\n\n    this._onPlay = this._onPlay.bind(this);\n    this._onLoadedMetaData = this._onLoadedMetaData.bind(this);\n    this._onVisibilityChange = this._onVisibilityChange.bind(this);\n\n    video.disablePictureInPicture = true;\n    // Allow inline playback on iPhone instead of requiring full screen playback,\n    // see https://webkit.org/blog/6784/new-video-policies-for-ios/\n    video.playsInline = true;\n    // Allow play() on iPhone without requiring a user gesture. Should not really be needed as camera stream\n    // includes no audio, but just to be safe.\n    video.muted = true;\n\n    // Avoid Safari stopping the video stream on a hidden video.\n    // See https://github.com/cozmo/jsQR/issues/185\n    let shouldHideVideo = false;\n    if (video.hidden) {\n      video.hidden = false;\n      shouldHideVideo = true;\n    }\n    if (!document.body.contains(video)) {\n      document.body.appendChild(video);\n      shouldHideVideo = true;\n    }\n    requestAnimationFrame(() => {\n      // Checking in requestAnimationFrame which should avoid a potential additional re-flow for getComputedStyle.\n      const computedStyle = window.getComputedStyle(video);\n      if (computedStyle.display === \"none\") {\n        video.style.setProperty(\"display\", \"block\", \"important\");\n        shouldHideVideo = true;\n      }\n      if (computedStyle.visibility !== \"visible\") {\n        video.style.setProperty(\"visibility\", \"visible\", \"important\");\n        shouldHideVideo = true;\n      }\n      if (shouldHideVideo) {\n        // Hide the video in a way that doesn't cause Safari to stop the playback.\n        console.warn(\n          \"QrScanner has overwritten the video hiding style to avoid Safari stopping the playback.\"\n        );\n        video.style.opacity = 0;\n        video.style.width = 0;\n        video.style.height = 0;\n      }\n    });\n\n    video.addEventListener(\"play\", this._onPlay);\n    video.addEventListener(\"loadedmetadata\", this._onLoadedMetaData);\n    document.addEventListener(\"visibilitychange\", this._onVisibilityChange);\n\n    this._qrEnginePromise = QrScanner.createQrEngine();\n  }\n\n  /* async */\n  hasFlash() {\n    let openedStream = null;\n    return (\n      this.$video.srcObject\n        ? Promise.resolve(this.$video.srcObject.getVideoTracks()[0])\n        : this._getCameraStream().then(({ stream }) => {\n            console.warn(\n              \"Call hasFlash after successfully starting the scanner to avoid creating \" +\n                \"a temporary video stream\"\n            );\n            openedStream = stream;\n            return stream.getVideoTracks()[0];\n          })\n    )\n      .then((track) => \"torch\" in track.getSettings())\n      .catch(() => false)\n      .finally(() => {\n        // close the stream we just opened for detecting whether it supports flash\n        if (!openedStream) return;\n        for (const track of openedStream.getTracks()) {\n          track.stop();\n          openedStream.removeTrack(track);\n        }\n      });\n  }\n\n  isFlashOn() {\n    return this._flashOn;\n  }\n\n  /* async */\n  toggleFlash() {\n    if (this._flashOn) {\n      return this.turnFlashOff();\n    } else {\n      return this.turnFlashOn();\n    }\n  }\n\n  /* async */\n  turnFlashOn() {\n    if (this._flashOn) return Promise.resolve();\n    this._flashOn = true;\n    if (!this._active || this._paused) return Promise.resolve(); // flash will be turned on later on .start()\n    return this.hasFlash()\n      .then((hasFlash) => {\n        if (!hasFlash) return Promise.reject(\"No flash available\");\n        // Note that the video track is guaranteed to exist at this point\n        return this.$video.srcObject.getVideoTracks()[0].applyConstraints({\n          advanced: [{ torch: true }],\n        });\n      })\n      .catch((e) => {\n        this._flashOn = false;\n        throw e;\n      });\n  }\n\n  /* async */\n  turnFlashOff() {\n    if (!this._flashOn) return;\n    // applyConstraints with torch: false does not work to turn the flashlight off, as a stream's torch stays\n    // continuously on, see https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints#torch. Therefore,\n    // we have to stop the stream to turn the flashlight off.\n    this._flashOn = false;\n    return this._restartVideoStream();\n  }\n\n  destroy() {\n    this.$video.removeEventListener(\"loadedmetadata\", this._onLoadedMetaData);\n    this.$video.removeEventListener(\"play\", this._onPlay);\n    document.removeEventListener(\"visibilitychange\", this._onVisibilityChange);\n\n    this.stop();\n    QrScanner._postWorkerMessage(this._qrEnginePromise, \"close\");\n  }\n\n  /* async */\n  start() {\n    if (this._active && !this._paused) {\n      return Promise.resolve();\n    }\n    if (window.location.protocol !== \"https:\") {\n      // warn but try starting the camera anyways\n      console.warn(\n        \"The camera stream is only accessible if the page is transferred via https.\"\n      );\n    }\n    this._active = true;\n    if (document.hidden) {\n      // camera will be started as soon as tab is in foreground\n      return Promise.resolve();\n    }\n    this._paused = false;\n    if (this.$video.srcObject) {\n      // camera stream already/still set\n      this.$video.play();\n      return Promise.resolve();\n    }\n\n    return this._getCameraStream()\n      .then(({ stream, facingMode }) => {\n        this.$video.srcObject = stream;\n        this.$video.play();\n        this._setVideoMirror(facingMode);\n\n        // Restart the flash if it was previously on\n        if (this._flashOn) {\n          this._flashOn = false; // force turnFlashOn to restart the flash\n          this.turnFlashOn().catch(() => {});\n        }\n      })\n      .catch((e) => {\n        this._active = false;\n        throw e;\n      });\n  }\n\n  stop() {\n    this.pause();\n    this._active = false;\n  }\n\n  /* async */\n  pause(stopStreamImmediately = false) {\n    this._paused = true;\n    if (!this._active) {\n      return Promise.resolve(true);\n    }\n    this.$video.pause();\n\n    const stopStream = () => {\n      const tracks = this.$video.srcObject\n        ? this.$video.srcObject.getTracks()\n        : [];\n      for (const track of tracks) {\n        track.stop(); //  note that this will also automatically turn the flashlight off\n        this.$video.srcObject.removeTrack(track);\n      }\n      this.$video.srcObject = null;\n    };\n\n    if (stopStreamImmediately) {\n      stopStream();\n      return Promise.resolve(true);\n    }\n\n    return new Promise((resolve) => setTimeout(resolve, 300)).then(() => {\n      if (!this._paused) return false;\n      stopStream();\n      return true;\n    });\n  }\n\n  /* async */\n  setCamera(facingModeOrDeviceId) {\n    if (facingModeOrDeviceId === this._preferredCamera)\n      return Promise.resolve();\n    this._preferredCamera = facingModeOrDeviceId;\n    // Restart the scanner with the new camera which will also update the video mirror and the scan region.\n    return this._restartVideoStream();\n  }\n\n  /* async */\n  static scanImage(\n    imageOrFileOrUrl,\n    scanRegion = null,\n    qrEngine = null,\n    canvas = null,\n    disallowCanvasResizing = false,\n    alsoTryWithoutScanRegion = false\n  ) {\n    const gotExternalWorker = qrEngine instanceof Worker;\n\n    let promise = Promise.all([\n      qrEngine || QrScanner.createQrEngine(),\n      QrScanner._loadImage(imageOrFileOrUrl),\n    ]).then(([engine, image]) => {\n      qrEngine = engine;\n      let canvasContext;\n      [canvas, canvasContext] = QrScanner._drawToCanvas(\n        image,\n        scanRegion,\n        canvas,\n        disallowCanvasResizing\n      );\n\n      if (qrEngine instanceof Worker) {\n        if (!gotExternalWorker) {\n          // Enable scanning of inverted color qr codes. Not using _postWorkerMessage as it's async\n          qrEngine.postMessage({ type: \"inversionMode\", data: \"both\" });\n        }\n        return new Promise((resolve, reject) => {\n          let timeout, onMessage, onError;\n          onMessage = (event) => {\n            if (event.data.type !== \"qrResult\") {\n              return;\n            }\n            qrEngine.removeEventListener(\"message\", onMessage);\n            qrEngine.removeEventListener(\"error\", onError);\n            clearTimeout(timeout);\n            if (event.data.data !== null) {\n              resolve(event.data.data);\n            } else {\n              reject(QrScanner.NO_QR_CODE_FOUND);\n            }\n          };\n          onError = (e) => {\n            qrEngine.removeEventListener(\"message\", onMessage);\n            qrEngine.removeEventListener(\"error\", onError);\n            clearTimeout(timeout);\n            const errorMessage = !e ? \"Unknown Error\" : e.message || e;\n            reject(\"Scanner error: \" + errorMessage);\n          };\n          qrEngine.addEventListener(\"message\", onMessage);\n          qrEngine.addEventListener(\"error\", onError);\n          timeout = setTimeout(() => onError(\"timeout\"), 10000);\n          const imageData = canvasContext.getImageData(\n            0,\n            0,\n            canvas.width,\n            canvas.height\n          );\n          qrEngine.postMessage(\n            {\n              type: \"decode\",\n              data: imageData,\n            },\n            [imageData.data.buffer]\n          );\n        });\n      } else {\n        return new Promise((resolve, reject) => {\n          const timeout = setTimeout(\n            () => reject(\"Scanner error: timeout\"),\n            10000\n          );\n          qrEngine\n            .detect(canvas)\n            .then((scanResults) => {\n              if (!scanResults.length) {\n                reject(QrScanner.NO_QR_CODE_FOUND);\n              } else {\n                resolve(scanResults[0].rawValue);\n              }\n            })\n            .catch((e) => reject(\"Scanner error: \" + (e.message || e)))\n            .finally(() => clearTimeout(timeout));\n        });\n      }\n    });\n\n    if (scanRegion && alsoTryWithoutScanRegion) {\n      promise = promise.catch(() =>\n        QrScanner.scanImage(\n          imageOrFileOrUrl,\n          null,\n          qrEngine,\n          canvas,\n          disallowCanvasResizing\n        )\n      );\n    }\n\n    promise = promise.finally(() => {\n      if (gotExternalWorker) return;\n      QrScanner._postWorkerMessage(qrEngine, \"close\");\n    });\n\n    return promise;\n  }\n\n  setGrayscaleWeights(red, green, blue, useIntegerApproximation = true) {\n    // Note that for the native BarcodeDecoder, this is a no-op. However, the native implementations work also\n    // well with colored qr codes.\n    QrScanner._postWorkerMessage(this._qrEnginePromise, \"grayscaleWeights\", {\n      red,\n      green,\n      blue,\n      useIntegerApproximation,\n    });\n  }\n\n  setInversionMode(inversionMode) {\n    // Note that for the native BarcodeDecoder, this is a no-op. However, the native implementations scan normal\n    // and inverted qr codes by default\n    QrScanner._postWorkerMessage(\n      this._qrEnginePromise,\n      \"inversionMode\",\n      inversionMode\n    );\n  }\n\n  /* async */\n  static createQrEngine(workerPath = QrScanner.WORKER_PATH) {\n    return (\n      \"BarcodeDetector\" in window && BarcodeDetector.getSupportedFormats\n        ? BarcodeDetector.getSupportedFormats()\n        : Promise.resolve([])\n    ).then((supportedFormats) =>\n      supportedFormats.indexOf(\"qr_code\") !== -1\n        ? new BarcodeDetector({ formats: [\"qr_code\"] })\n        : new Worker(workerPath)\n    );\n  }\n\n  _onPlay() {\n    this._scanRegion = this._calculateScanRegion(this.$video);\n    this._scanFrame();\n  }\n\n  _onLoadedMetaData() {\n    this._scanRegion = this._calculateScanRegion(this.$video);\n  }\n\n  _onVisibilityChange() {\n    if (document.hidden) {\n      this.pause();\n    } else if (this._active) {\n      this.start();\n    }\n  }\n\n  _calculateScanRegion(video) {\n    // Default scan region calculation. Note that this can be overwritten in the constructor.\n    const smallestDimension = Math.min(video.videoWidth, video.videoHeight);\n    const scanRegionSize = Math.round((2 / 3) * smallestDimension);\n    return {\n      x: Math.round((video.videoWidth - scanRegionSize) / 2),\n      y: Math.round((video.videoHeight - scanRegionSize) / 2),\n      width: scanRegionSize,\n      height: scanRegionSize,\n      downScaledWidth: this._legacyCanvasSize,\n      downScaledHeight: this._legacyCanvasSize,\n    };\n  }\n\n  _scanFrame() {\n    if (!this._active || this.$video.paused || this.$video.ended) return false;\n    // using requestAnimationFrame to avoid scanning if tab is in background\n    requestAnimationFrame(() => {\n      if (this.$video.readyState <= 1) {\n        // Skip scans until the video is ready as drawImage() only works correctly on a video with readyState\n        // > 1, see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage#Notes.\n        // This also avoids false positives for videos paused after a successful scan which remains visible on\n        // the canvas until the video is started again and ready.\n        this._scanFrame();\n        return;\n      }\n      this._qrEnginePromise\n        .then((qrEngine) =>\n          QrScanner.scanImage(\n            this.$video,\n            this._scanRegion,\n            qrEngine,\n            this.$canvas\n          )\n        )\n        .then(this._onDecode, (error) => {\n          if (!this._active) return;\n          const errorMessage = error.message || error;\n          if (errorMessage.indexOf(\"service unavailable\") !== -1) {\n            // When the native BarcodeDetector crashed, create a new one\n            this._qrEnginePromise = QrScanner.createQrEngine();\n          }\n          this._onDecodeError(error);\n        })\n        .then(() => this._scanFrame());\n    });\n  }\n\n  _onDecodeError(error) {\n    // default error handler; can be overwritten in the constructor\n    if (error === QrScanner.NO_QR_CODE_FOUND) return;\n    console.log(error);\n  }\n\n  /* async */\n  _getCameraStream() {\n    if (!navigator.mediaDevices) {\n      return Promise.reject(\"Camera not found.\");\n    }\n\n    const preferenceType =\n      this._preferredCamera === \"environment\" ||\n      this._preferredCamera === \"user\"\n        ? \"facingMode\"\n        : \"deviceId\";\n    const constraintsWithoutCamera = [\n      {\n        width: { min: 1024 },\n      },\n      {\n        width: { min: 768 },\n      },\n      {},\n    ];\n    const constraintsWithCamera = constraintsWithoutCamera.map((constraint) =>\n      Object.assign({}, constraint, {\n        [preferenceType]: { exact: this._preferredCamera },\n      })\n    );\n\n    // First try constraints with camera, then without camera. Using reduceRight as the Promise is build in a\n    // bottom up fashion.\n    return [...constraintsWithCamera, ...constraintsWithoutCamera].reduceRight(\n      (fallback, constraint) => () =>\n        navigator.mediaDevices\n          .getUserMedia({ video: constraint, audio: false })\n          .then((stream) => ({\n            stream,\n            // Try to determine the facing mode from the stream, otherwise use a guess or 'environment' as\n            // default. Note that the guess is not always accurate as Safari returns cameras of different facing\n            // mode, even for exact facingMode constraints.\n            facingMode:\n              this._getFacingMode(stream) ||\n              (constraint.facingMode\n                ? this._preferredCamera // _preferredCamera is a facing mode and we are able to fulfill it\n                : this._preferredCamera === \"environment\"\n                ? \"user\" // switch as _preferredCamera was environment but we are not able to fulfill it\n                : \"environment\"), // switch from unfulfilled user facingMode or default to environment\n          }))\n          .catch(fallback),\n      () => Promise.reject(\"Camera not found.\")\n    )();\n  }\n\n  /* async */\n  _restartVideoStream() {\n    // Note that we always pause the stream and not only if !this._paused as even if this._paused === true, the\n    // stream might still be running, as it's by default only stopped after a delay of 300ms.\n    const wasPaused = this._paused;\n    return this.pause(true).then((paused) => {\n      if (!paused || wasPaused || !this._active) return;\n      return this.start();\n    });\n  }\n\n  _setVideoMirror(facingMode) {\n    // in user facing mode mirror the video to make it easier for the user to position the QR code\n    const scaleFactor = facingMode === \"user\" ? -1 : 1;\n    this.$video.style.transform = \"scaleX(\" + scaleFactor + \")\";\n  }\n\n  _getFacingMode(videoStream) {\n    const videoTrack = videoStream.getVideoTracks()[0];\n    if (!videoTrack) return null; // unknown\n    // inspired by https://github.com/JodusNodus/react-qr-reader/blob/master/src/getDeviceId.js#L13\n    return /rear|back|environment/i.test(videoTrack.label)\n      ? \"environment\"\n      : /front|user|face/i.test(videoTrack.label)\n      ? \"user\"\n      : null; // unknown\n  }\n\n  static _drawToCanvas(\n    image,\n    scanRegion = null,\n    canvas = null,\n    disallowCanvasResizing = false\n  ) {\n    canvas = canvas || document.createElement(\"canvas\");\n    const scanRegionX = scanRegion && scanRegion.x ? scanRegion.x : 0;\n    const scanRegionY = scanRegion && scanRegion.y ? scanRegion.y : 0;\n    const scanRegionWidth =\n      scanRegion && scanRegion.width\n        ? scanRegion.width\n        : image.width || image.videoWidth;\n    const scanRegionHeight =\n      scanRegion && scanRegion.height\n        ? scanRegion.height\n        : image.height || image.videoHeight;\n\n    if (!disallowCanvasResizing) {\n      const canvasWidth =\n        scanRegion && scanRegion.downScaledWidth\n          ? scanRegion.downScaledWidth\n          : scanRegionWidth;\n      const canvasHeight =\n        scanRegion && scanRegion.downScaledHeight\n          ? scanRegion.downScaledHeight\n          : scanRegionHeight;\n      // Setting the canvas width or height clears the canvas, even if the values didn't change, therefore only\n      // set them if they actually changed.\n      if (canvas.width !== canvasWidth) {\n        canvas.width = canvasWidth;\n      }\n      if (canvas.height !== canvasHeight) {\n        canvas.height = canvasHeight;\n      }\n    }\n\n    const context = canvas.getContext(\"2d\", { alpha: false });\n    context.imageSmoothingEnabled = false; // gives less blurry images\n    context.drawImage(\n      image,\n      scanRegionX,\n      scanRegionY,\n      scanRegionWidth,\n      scanRegionHeight,\n      0,\n      0,\n      canvas.width,\n      canvas.height\n    );\n    return [canvas, context];\n  }\n\n  /* async */\n  static _loadImage(imageOrFileOrBlobOrUrl) {\n    if (\n      imageOrFileOrBlobOrUrl instanceof HTMLCanvasElement ||\n      imageOrFileOrBlobOrUrl instanceof HTMLVideoElement ||\n      (window.ImageBitmap &&\n        imageOrFileOrBlobOrUrl instanceof window.ImageBitmap) ||\n      (window.OffscreenCanvas &&\n        imageOrFileOrBlobOrUrl instanceof window.OffscreenCanvas)\n    ) {\n      return Promise.resolve(imageOrFileOrBlobOrUrl);\n    } else if (imageOrFileOrBlobOrUrl instanceof Image) {\n      return QrScanner._awaitImageLoad(imageOrFileOrBlobOrUrl).then(\n        () => imageOrFileOrBlobOrUrl\n      );\n    } else if (\n      imageOrFileOrBlobOrUrl instanceof File ||\n      imageOrFileOrBlobOrUrl instanceof Blob ||\n      imageOrFileOrBlobOrUrl instanceof URL ||\n      typeof imageOrFileOrBlobOrUrl === \"string\"\n    ) {\n      const image = new Image();\n      if (\n        imageOrFileOrBlobOrUrl instanceof File ||\n        imageOrFileOrBlobOrUrl instanceof Blob\n      ) {\n        image.src = URL.createObjectURL(imageOrFileOrBlobOrUrl);\n      } else {\n        image.src = imageOrFileOrBlobOrUrl;\n      }\n      return QrScanner._awaitImageLoad(image).then(() => {\n        if (\n          imageOrFileOrBlobOrUrl instanceof File ||\n          imageOrFileOrBlobOrUrl instanceof Blob\n        ) {\n          URL.revokeObjectURL(image.src);\n        }\n        return image;\n      });\n    } else {\n      return Promise.reject(\"Unsupported image type.\");\n    }\n  }\n\n  /* async */\n  static _awaitImageLoad(image) {\n    return new Promise((resolve, reject) => {\n      if (image.complete && image.naturalWidth !== 0) {\n        // already loaded\n        resolve();\n      } else {\n        let onLoad, onError;\n        onLoad = () => {\n          image.removeEventListener(\"load\", onLoad);\n          image.removeEventListener(\"error\", onError);\n          resolve();\n        };\n        onError = () => {\n          image.removeEventListener(\"load\", onLoad);\n          image.removeEventListener(\"error\", onError);\n          reject(\"Image load error\");\n        };\n        image.addEventListener(\"load\", onLoad);\n        image.addEventListener(\"error\", onError);\n      }\n    });\n  }\n\n  /* async */\n  static _postWorkerMessage(qrEngineOrQrEnginePromise, type, data) {\n    return Promise.resolve(qrEngineOrQrEnginePromise).then((qrEngine) => {\n      if (!(qrEngine instanceof Worker)) return;\n      qrEngine.postMessage({ type, data });\n    });\n  }\n}\nQrScanner.DEFAULT_CANVAS_SIZE = 400;\nQrScanner.NO_QR_CODE_FOUND = \"No QR code found\";\nQrScanner.WORKER_PATH = \"qr-scanner-worker.min.js\";\n"],"names":["QrScanner","listCameras","then","cameras","length","catch","requestLabels","navigator","mediaDevices","Promise","resolve","openedStream","getUserMedia","audio","video","stream","enumerateDevices","devices","filter","device","kind","map","i","id","deviceId","label","finally","track","stop","removeTrack","onDecode","canvasSizeOrOnDecodeError","_onDecodeError","canvasSizeOrCalculateScanRegion","_calculateScanRegion","preferredCamera","$video","$canvas","document","createElement","_onDecode","_legacyCanvasSize","DEFAULT_CANVAS_SIZE","_preferredCamera","_flashOn","_paused","_active","console","warn","_scanRegion","_onPlay","bind","_onLoadedMetaData","_onVisibilityChange","disablePictureInPicture","playsInline","muted","shouldHideVideo","hidden","body","contains","appendChild","requestAnimationFrame","computedStyle","display","style","setProperty","visibility","opacity","width","height","addEventListener","_qrEnginePromise","createQrEngine","srcObject","getVideoTracks","_getCameraStream","getSettings","turnFlashOff","turnFlashOn","hasFlash","applyConstraints","advanced","torch","reject","e","_restartVideoStream","removeEventListener","_postWorkerMessage","window","location","protocol","play","facingMode","_setVideoMirror","pause","stopStreamImmediately","tracks","getTracks","stopStream","setTimeout","facingModeOrDeviceId","imageOrFileOrUrl","scanRegion","qrEngine","canvas","disallowCanvasResizing","alsoTryWithoutScanRegion","promise","all","_loadImage","engine","image","canvasContext","_drawToCanvas","Worker","gotExternalWorker","postMessage","type","data","timeout","onMessage","onError","event","clearTimeout","NO_QR_CODE_FOUND","imageData","buffer","detect","scanResults","rawValue","message","scanImage","red","green","blue","useIntegerApproximation","inversionMode","workerPath","WORKER_PATH","BarcodeDetector","getSupportedFormats","supportedFormats","indexOf","formats","_scanFrame","start","videoHeight","x","Math","round","videoWidth","scanRegionSize","y","downScaledWidth","downScaledHeight","paused","ended","readyState","error","log","min","constraint","Object","assign","preferenceType","exact","constraintsWithoutCamera","reduceRight","fallback","_getFacingMode","wasPaused","transform","videoStream","test","videoTrack","scanRegionWidth","scanRegionHeight","canvasWidth","canvasHeight","alpha","context","imageSmoothingEnabled","drawImage","scanRegionX","scanRegionY","imageOrFileOrBlobOrUrl","HTMLCanvasElement","HTMLVideoElement","ImageBitmap","OffscreenCanvas","Image","_awaitImageLoad","File","Blob","URL","src","createObjectURL","revokeObjectURL","complete","naturalWidth","onLoad","qrEngineOrQrEnginePromise"],"mappings":"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"}